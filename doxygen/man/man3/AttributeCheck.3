.TH "AttributeCheck< C >" 3 "Tue May 5 2020" "Scars_Healing" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AttributeCheck< C > \- Predicatum, which determines if an item in an array has a specific attribute\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Item\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAttributeCheck\fP (C Attribute)"
.br
.RI "Default Constructor\&. "
.ti -1c
.RI "bool \fBoperator()\fP (const C &c)"
.br
.RI "Decides if the attribute is equal\&. "
.ti -1c
.RI "bool \fBoperator()\fP (const \fBItem\fP &c)"
.br
.RI "Checks if the type of an \fBItem\fP is something\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class C>
.br
class AttributeCheck< C >"
Predicatum, which determines if an item in an array has a specific attribute\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class C > \fBAttributeCheck\fP< C >::\fBAttributeCheck\fP (C Attribute)\fC [inline]\fP"

.PP
Default Constructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<class C > bool \fBAttributeCheck\fP< C >::operator() (const C & c)\fC [inline]\fP"

.PP
Decides if the attribute is equal\&. 
.SS "template<class C > bool \fBAttributeCheck\fP< C >::operator() (const \fBItem\fP & c)\fC [inline]\fP"

.PP
Checks if the type of an \fBItem\fP is something\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Scars_Healing from the source code\&.
